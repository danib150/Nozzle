From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Daniele Bruni <67119358+danib150@users.noreply.github.com>
Date: Wed, 28 Jun 2023 18:06:12 +0200
Subject: [PATCH] Kyori Adventure Implementation


diff --git a/build.gradle.kts b/build.gradle.kts
index c1b5f5349b69c811e4b648a723808c8eea5b710f..f76e8cc0edc934c094e7f7e7aa4328e9ec64dc99 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -26,9 +26,10 @@ dependencies {
 
     testImplementation("junit:junit:4.11")
     testImplementation("org.hamcrest:hamcrest-library:1.3")
-
     //Nozzle start
-    implementation("ch.jalu:configme:1.3.0")
+    implementation("net.kyori:adventure-api:4.14.0")
+    implementation("net.kyori:adventure-text-serializer-legacy:4.14.0")
+    //Nozzle end
 }
 
 tasks {
@@ -38,6 +39,11 @@ tasks {
 
         val cbLibsPkg = "org.bukkit.craftbukkit.libs"
 
+
+        //Nozzle Start
+        relocate("net.kyori.adventure", "it.nozzlemc.libs.adventure")
+        //Nozzle End
+
         relocate("joptsimple", "$cbLibsPkg.joptsimple")
         relocate("jline", "$cbLibsPkg.jline")
         relocate("org.ibex", "$cbLibsPkg.org.ibex")
@@ -47,7 +53,6 @@ tasks {
             exclude("org.bukkit.craftbukkit.Main*") // don't relocate main class
         }
         relocate("net.minecraft.server", "net.minecraft.server.v${minecraftVersion}")
-        relocate("ch.jalu.configme", "it.dbruni.configme")
     }
 
     named("build") {
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutChat.java b/src/main/java/net/minecraft/server/PacketPlayOutChat.java
index 6cd5df2e8dfae1829d17c117b4a7422711a0db22..191a78a0e3e85e19008255cd8f0c4181b88dbb29 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutChat.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutChat.java
@@ -1,11 +1,15 @@
 package net.minecraft.server;
 
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
+
 import java.io.IOException;
 
 public class PacketPlayOutChat implements Packet<PacketListenerPlayOut> {
 
     private IChatBaseComponent a;
     public net.md_5.bungee.api.chat.BaseComponent[] components; // Spigot
+    public Component kyoriComponent; // Nozzle Component
     private byte b;
 
     public PacketPlayOutChat() {}
@@ -28,6 +32,9 @@ public class PacketPlayOutChat implements Packet<PacketListenerPlayOut> {
         // Spigot start
         if (components != null) {
             packetdataserializer.a(net.md_5.bungee.chat.ComponentSerializer.toString(components));
+        } else if (kyoriComponent != null) {
+            String legacyString = LegacyComponentSerializer.legacy(LegacyComponentSerializer.SECTION_CHAR).serialize(kyoriComponent);
+            packetdataserializer.a(legacyString);
         } else {
             packetdataserializer.a(this.a);
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 3633cf608421ed7b67863eb8c547794aad09c9ef..a7f69592d33eb8e226fab5a8d52db74d7e966379 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -23,6 +23,7 @@ import java.util.regex.Pattern;
 
 import javax.imageio.ImageIO;
 
+import net.kyori.adventure.text.Component;
 import net.minecraft.server.*;
 
 import org.bukkit.BanList;
@@ -1824,6 +1825,13 @@ public final class CraftServer implements Server {
                 player.spigot().sendMessage(components);
             }
         }
+
+        @Override
+        public void broadcast(Component component) {
+            for (Player player : getOnlinePlayers()) {
+                player.spigot().sendMessage(component);
+            }
+        }
     };
 
     public Spigot spigot()
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index f1add4b8173cc9035e1991f5dbeb008b6de8ceae..115a7d78b976177123574f010e99890902fa1266 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -20,6 +20,8 @@ import java.util.Set;
 import java.util.UUID;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+
+import net.kyori.adventure.text.Component;
 import net.md_5.bungee.api.chat.BaseComponent;
 
 import net.minecraft.server.*;
@@ -1561,13 +1563,25 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
           sendMessage( new BaseComponent[] { component } );
         }
 
+        //Nozzle Start
         @Override
-        public void sendMessage(BaseComponent... components) {
-           if ( getHandle().playerConnection == null ) return;
+        public void sendMessage(Component component) {
+            if (getHandle().playerConnection == null) return;
 
             PacketPlayOutChat packet = new PacketPlayOutChat();
-            packet.components = components;
+            packet.kyoriComponent = component;
             getHandle().playerConnection.sendPacket(packet);
+
+        }
+        //Nozzle End
+
+        @Override
+        public void sendMessage(BaseComponent... components) {
+           if (getHandle().playerConnection == null) return;
+
+           PacketPlayOutChat packet = new PacketPlayOutChat();
+           packet.components = components;
+           getHandle().playerConnection.sendPacket(packet);
         }
 
         // PaperSpigot start - Implement affects spawning API
diff --git a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftTeam.java b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftTeam.java
index f5ff0f712ef97ff39a70e5518cd8fc15f438e834..c86edd995a9548b4e7ecacf27a90f732fbc1ad76 100644
--- a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftTeam.java
+++ b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftTeam.java
@@ -1,7 +1,10 @@
 package org.bukkit.craftbukkit.scoreboard;
 
+import java.awt.*;
 import java.util.Set;
 
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
 import net.minecraft.server.ScoreboardTeamBase.EnumNameTagVisibility;
 import org.apache.commons.lang.Validate;
 import org.bukkit.Bukkit;
@@ -47,6 +50,10 @@ final class CraftTeam extends CraftScoreboardComponent implements Team {
         return team.getPrefix();
     }
 
+    public Component prefix() throws IllegalStateException {
+        return LegacyComponentSerializer.legacy(LegacyComponentSerializer.SECTION_CHAR).deserialize(team.getPrefix());
+    }
+
     public void setPrefix(String prefix) throws IllegalStateException, IllegalArgumentException {
         Validate.notNull(prefix, "Prefix cannot be null");
         Validate.isTrue(prefix.length() <= 32, "Prefix '" + prefix + "' is longer than the limit of 32 characters");
@@ -55,6 +62,19 @@ final class CraftTeam extends CraftScoreboardComponent implements Team {
         team.setPrefix(prefix);
     }
 
+    public void setPrefix(Component prefix) throws IllegalStateException, IllegalArgumentException {
+        Validate.notNull(prefix, "Prefix cannot be null");
+        String deserializedPrefix = LegacyComponentSerializer.legacy(LegacyComponentSerializer.SECTION_CHAR).serialize(prefix);
+        Validate.isTrue(deserializedPrefix.length() <= 32, "Prefix '" + deserializedPrefix + "' is longer than the limit of 32 characters");
+        CraftScoreboard scoreboard = checkState();
+
+        team.setPrefix(deserializedPrefix);
+    }
+
+    public Component suffix() throws IllegalStateException {
+        return LegacyComponentSerializer.legacy(LegacyComponentSerializer.SECTION_CHAR).deserialize(team.getSuffix());
+    }
+
     public String getSuffix() throws IllegalStateException {
         CraftScoreboard scoreboard = checkState();
 
@@ -69,6 +89,17 @@ final class CraftTeam extends CraftScoreboardComponent implements Team {
         team.setSuffix(suffix);
     }
 
+    //Nozzle start
+    public void setSuffix(Component suffix) throws IllegalStateException, IllegalArgumentException {
+        Validate.notNull(suffix, "Prefix cannot be null");
+        String deserializedSuffix = LegacyComponentSerializer.legacy(LegacyComponentSerializer.SECTION_CHAR).serialize(suffix);
+        Validate.isTrue(deserializedSuffix.length() <= 32, "Suffix '" + deserializedSuffix + "' is longer than the limit of 32 characters");
+        CraftScoreboard scoreboard = checkState();
+
+        team.setSuffix(deserializedSuffix);
+    }
+    //Nozzle end
+
     public boolean allowFriendlyFire() throws IllegalStateException {
         CraftScoreboard scoreboard = checkState();
 
